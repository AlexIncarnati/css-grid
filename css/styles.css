/* Practical approach

1) Build accessible mobile-first layout without grid

2) Use mobile-first layout as fallback from all browsers

3) Use @supports to detect grid support

4) At the appropriate breakpoint, create layout with grid and grid-areas


Notes: 

- Use Firefox to develop grid since it has a grid inspector

- Rachel Andrew's Grid by Example http://gridbyexample.com

- MDN has exhaustive documentation https://www.mozilla.org/en-US/developer/css-grid/

- CSS Tricks has a complete guide https://css-tricks.com/snippets/css/complete-guide-grid/



*/

.site {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto 1fr 3fr 1fr;
	grid-template-areas:
		'title title'
		'main header'
		'main sidebar'
		'footer footer';
}

.masthead {
	grid-area: header;
	background: yellow;
}

.page-title {
	grid-area: title;
}

.main-content {
	grid-area: main;
	background: blue;
}

.sidebar {
	grid-area: sidebar;
	background: red;
}

.footer {
	grid-area: footer;
	background: green;
}

@media screen and (min-width: 34em) {
	.site {
		grid-template-columns: 2fr 1fr 1fr;
		grid-template-areas:
			'title title title'
			'main header header'
			'main sidebar footer';
	}
}
